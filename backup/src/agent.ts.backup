import { ChatOpenAI } from "@langchain/openai";
import { AgentExecutor, createOpenAIToolsAgent } from "langchain/agents";
import {
  ChatPromptTemplate,
  MessagesPlaceholder,
} from "@langchain/core/prompts";
// üî• UPGRADE: ConversationSummaryBufferMemory statt BufferMemory
import { ConversationSummaryBufferMemory } from "langchain/memory";
import { productSearchTool } from "./tools/product-search-tool.js";

export async function createAlkostoAgent() {
  console.log("ü§ñ Erstelle ChatOpenAI Instanz...");
  const llm = new ChatOpenAI({
    modelName: "openai/gpt-3.5-turbo",
    temperature: 0.2,
    openAIApiKey: process.env.OPENAI_API_KEY,
    configuration: {
      baseURL: process.env.OPENAI_BASE_URL,
    },
  });

  console.log("üîß Lade Tools...");
  const tools = [productSearchTool];

  console.log("üìù Erstelle erweiterten Prompt...");
  const prompt = ChatPromptTemplate.fromMessages([
    ["system", `Eres un asistente de ventas experto de Alkosto, la tienda de electr√≥nicos m√°s importante de Colombia.

üéØ INSTRUCCIONES IMPORTANTES:
- SIEMPRE usa la herramienta 'produkt-katalog-suche' para buscar productos
- NUNCA inventes informaci√≥n de productos
- Presenta m√°ximo 3 productos por b√∫squeda
- Incluye precio, marca y caracter√≠sticas principales
- Haz preguntas espec√≠ficas si la consulta es vaga
- Sugiere alternativas si no hay resultados exactos
- Usa un tono amigable y profesional en espa√±ol
- Menciona garant√≠as y beneficios cuando sean relevantes

üõí PROCESO DE VENTA OPTIMIZADO:
1. Saluda amigablemente y entiende la necesidad del cliente
2. Busca productos relevantes usando la herramienta
3. Presenta opciones con ventajas claras y diferenciadas
4. Destaca el valor y ahorro para el cliente
5. Ofrece comparaciones si es √∫til
6. Sugiere accesorios complementarios cuando sea apropiado
7. Facilita la decisi√≥n de compra

üì± CATEGOR√çAS PRINCIPALES: 
televisor, nevera, lavadora, celular, computador, tablet, parlante, auriculares, microondas, aire_acondicionado

üí° CONSEJOS DE VENTA:
- Enf√≥cate en beneficios, no solo caracter√≠sticas
- Menciona ofertas especiales y descuentos
- Crea urgencia apropiada sin presionar
- Ofrece alternativas si el presupuesto es limitado`],
    
    new MessagesPlaceholder("chat_history"),
    ["human", "{input}"],
    new MessagesPlaceholder("agent_scratchpad"),
  ]);

  console.log("üß† Erstelle SummaryBufferMemory...");
  // üî• UPGRADE: Robusteres Memory-Management
  const memory = new ConversationSummaryBufferMemory({
    llm, // Verwendet das gleiche LLM f√ºr Summaries
    maxTokenLimit: 2000, // Verhindert Token-Overflow bei langen Gespr√§chen
    returnMessages: true,
    memoryKey: "chat_history",
    outputKey: "output", // Wichtig f√ºr AgentExecutor-Kompatibilit√§t
    summaryMessageKey: "summary"
  });

  console.log("‚öôÔ∏è Erstelle OpenAI Tools Agent...");
  const agent = await createOpenAIToolsAgent({
    llm,
    tools,
    prompt,
  });

  console.log("üèóÔ∏è Erstelle AgentExecutor...");
  const agentExecutor = new AgentExecutor({
    agent,
    tools,
    memory,
    verbose: true,
    maxIterations: 3, // Verhindert Endlosschleifen
    earlyStoppingMethod: "force", // Korrekte Stopping-Methode
  });

  console.log("‚úÖ Alkosto Agent erfolgreich erstellt!");
  console.log(`üìä Konfiguration:
    - Model: GPT-3.5-turbo via OpenRouter
    - Memory: ConversationSummaryBufferMemory (max 2000 tokens)
    - Tools: ${tools.length} verf√ºgbar
    - Max Iterations: 3`);

  return agentExecutor;
}
